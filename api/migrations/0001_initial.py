# Generated by Django 5.2.6 on 2025-10-22 17:37

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Entidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, unique=True)),
                ('cnpj', models.CharField(blank=True, max_length=18, null=True, unique=True)),
                ('ano', models.IntegerField(default=2025, verbose_name='Ano de Exercício')),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Fornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(blank=True, max_length=255)),
                ('cnpj', models.CharField(max_length=18, unique=True)),
                ('telefone', models.CharField(blank=True, max_length=30, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('endereco', models.CharField(blank=True, max_length=255, null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, unique=True)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Orgao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('entidade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orgaos', to='api.entidade')),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='ProcessoLicitatorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=50, unique=True)),
                ('numero_processo', models.CharField(blank=True, max_length=50, null=True)),
                ('numero_certame', models.CharField(blank=True, max_length=50, null=True)),
                ('objeto', models.TextField()),
                ('modalidade', models.CharField(choices=[('Pregão Eletrônico', 'Pregão Eletrônico'), ('Concorrência Eletrônica', 'Concorrência Eletrônica'), ('Dispensa Eletrônica', 'Dispensa Eletrônica'), ('Inexigibilidade Eletrônica', 'Inexigibilidade Eletrônica'), ('Adesão a Registro de Preços', 'Adesão a Registro de Preços'), ('Credenciamento', 'Credenciamento')], max_length=50)),
                ('classificacao', models.CharField(choices=[('Compras', 'Compras'), ('Serviços Comuns', 'Serviços Comuns'), ('Serviços de Engenharia Comuns', 'Serviços de Engenharia Comuns'), ('Obras Comuns', 'Obras Comuns')], max_length=50)),
                ('tipo_organizacao', models.CharField(choices=[('Lote', 'Lote'), ('Item', 'Item')], max_length=10)),
                ('situacao', models.CharField(choices=[('Aberto', 'Aberto'), ('Em Pesquisa', 'Em Pesquisa'), ('Aguardando Publicação', 'Aguardando Publicação'), ('Publicado', 'Publicado'), ('Em Contratação', 'Em Contratação'), ('Adjudicado/Homologado', 'Adjudicado/Homologado'), ('Revogado/Cancelado', 'Revogado/Cancelado')], default='Em Pesquisa', max_length=50)),
                ('data_processo', models.DateField(blank=True, null=True)),
                ('data_abertura', models.DateTimeField(blank=True, null=True)),
                ('valor_referencia', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True)),
                ('vigencia_meses', models.PositiveIntegerField(blank=True, null=True)),
                ('registro_preco', models.BooleanField(default=False, verbose_name='Registro de Preço')),
                ('data_criacao_sistema', models.DateTimeField(auto_now_add=True)),
                ('entidade', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='processos', to='api.entidade')),
                ('orgao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='processos', to='api.orgao')),
            ],
            options={
                'verbose_name': 'Processo Licitatório',
                'verbose_name_plural': 'Processos Licitatórios',
                'ordering': ['-data_processo'],
            },
        ),
        migrations.CreateModel(
            name='Lote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.PositiveIntegerField()),
                ('descricao', models.TextField(blank=True, null=True)),
                ('processo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lotes', to='api.processolicitatorio')),
            ],
            options={
                'ordering': ['numero'],
                'unique_together': {('processo', 'numero')},
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=255)),
                ('unidade', models.CharField(max_length=20)),
                ('quantidade', models.DecimalField(decimal_places=2, max_digits=12)),
                ('valor_estimado', models.DecimalField(blank=True, decimal_places=2, max_digits=14, null=True)),
                ('ordem', models.PositiveIntegerField(default=1)),
                ('fornecedor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='itens', to='api.fornecedor')),
                ('lote', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='itens', to='api.lote')),
                ('processo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to='api.processolicitatorio')),
            ],
            options={
                'ordering': ['ordem'],
                'unique_together': {('processo', 'ordem')},
            },
        ),
        migrations.CreateModel(
            name='ItemFornecedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_proposto', models.DecimalField(decimal_places=2, max_digits=14)),
                ('vencedor', models.BooleanField(default=False)),
                ('fornecedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='propostas', to='api.fornecedor')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='propostas', to='api.item')),
            ],
            options={
                'verbose_name': 'Proposta de Fornecedor',
                'verbose_name_plural': 'Propostas de Fornecedores',
                'unique_together': {('item', 'fornecedor')},
            },
        ),
        migrations.CreateModel(
            name='FornecedorProcesso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fornecedor_nome', models.CharField(blank=True, max_length=255, null=True)),
                ('data_participacao', models.DateField(auto_now_add=True)),
                ('habilitado', models.BooleanField(default=True)),
                ('fornecedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processos', to='api.fornecedor')),
                ('processo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fornecedores_processo', to='api.processolicitatorio')),
            ],
            options={
                'verbose_name': 'Fornecedor do Processo',
                'verbose_name_plural': 'Fornecedores do Processo',
                'unique_together': {('processo', 'fornecedor')},
            },
        ),
    ]
